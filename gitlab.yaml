heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Linux server running Gitlab

parameter_groups:

- label: Server Settings
  parameters:
  - image
  - flavor

- label: rax-dev-params
  parameters:
  - server_hostname

parameters:

  server_hostname:
    label: Server Name
    description: Hostname to use for setting the server name.
    type: string
    default: gitlab
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 4 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

resources:

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  gitlab_admin_password:
    type: OS::Heat::RandomString
    properties:
      length: 32
      sequence: lettersdigits

  wait_condition:
    type: OS::Heat::SwiftSignal
    properties:
      handle: { get_resource: wait_condition_handle }
      timeout: 600

  wait_condition_handle:
    type: OS::Heat::SwiftSignalHandle

  gitlab_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
      config_drive: "true"
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            package_update: true
            packages:
              - build-essential
              - curl
              - openssh-server
              - postfix
              - python-pip
            write_files:
              - path: /root/gitlab.rb
                permissions: '0600'
                content: |
                  external_url "https://%server_hostname%"
                  gitlab_rails['initial_root_password'] = "%gitlab_admin_password%"
                  nginx['custom_nginx_config'] = "include /var/opt/gitlab/nginx/conf/gitlab-http-redirect.conf;"
              - path: /root/gitlab-http-redirect.conf
                permissions: '0655'
                content: |
                  server {
                    listen 80;
                    return 301 https://$host$request_uri;
                  }
              - path: /root/setup/install_gitlab.sh
                permissions: '0500'
                content: |
                  #!/bin/bash -ex

                  error() {
                    echo "ERROR: exiting at line $1"
                    python -c 'import json,requests;requests.put("%wc_notify%",data=json.dumps({"status":"FAILURE","data":open("/var/log/cloud-init-output.log").read()}))'
                    exit "${3:-1}"
                  }

                  trap 'error ${LINENO}' ERR

                  pip install requests

                  mkdir /root/working
                  cd /root/working

                  wget --progress=dot:giga 'https://downloads-packages.s3.amazonaws.com/ubuntu-14.04/gitlab_%version%-omnibus-1_amd64.deb'
                  dpkg -i gitlab_%version%-omnibus-1_amd64.deb
                  mv /etc/gitlab/gitlab.rb /etc/gitlab/gitlab.rb.original
                  mv /root/gitlab.rb /etc/gitlab/gitlab.rb
                  mkdir --mode=0750 /etc/gitlab/ssl
                  openssl req \
                  -subj '/CN=%server_hostname%/O=My Company Name LTD./C=US' \
                  -new -newkey rsa:2048 -days 3650 -sha256 -nodes -x509   \
                  -keyout /etc/gitlab/ssl/%server_hostname%.key           \
                  -out /etc/gitlab/ssl/%server_hostname%.crt
                  mkdir -p /var/opt/gitlab/nginx/conf
                  mv /root/gitlab-http-redirect.conf /var/opt/gitlab/nginx/conf
                  /usr/bin/gitlab-ctl reconfigure
                  ufw allow 22
                  ufw allow 80
                  ufw allow 443
                  ufw --force enable

                  python -c 'import json,requests;requests.put("%wc_notify%",data=json.dumps({"status":"SUCCESS","data":open("/var/log/cloud-init-output.log").read()}))'
            runcmd:
              - /root/setup/install_gitlab.sh
          params:
              '%gitlab_admin_password%': { get_attr: [gitlab_admin_password, value] }
              '%server_hostname%': { get_param: server_hostname }
              '%wc_notify%': { get_attr: ['wait_condition_handle', 'endpoint'] }
              '%version%': 7.8.1

outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  server_ip:
    description: Server IP
    value: { get_attr: [gitlab_server, accessIPv4] }

  gitlab_admin_password:
    description: GitLab Password
    value: { get_attr: [gitlab_admin_password, value] }

  server_data:
    value: { get_attr: [ wait_condition, data ] }
    description: Data from wait condition to report script status
